<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="update_data_with_put">
    <title>Update data with PUT</title>
    <shortdesc>Let's learn how to update data in your database using the PUT method.</shortdesc>
    <taskbody>
        <prereq id="prereq_ksd_gq1_qbc">
            <p dir="ltr" id="prereq_crud">To start working on CRUD operations, make sure your
                Node-RED environment is connected to your MongoDB database.</p>
        </prereq>
        <context>
            <p>To build the PUT method, we will need the following nodes:</p>
            <p>
                <table frame="all" rowsep="1" colsep="1" id="table_jxg_4fy_rbc">
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1*"/>
                        <colspec colname="c2" colnum="2" colwidth="2.08*"/>
                        <thead>
                            <row>
                                <entry>Node</entry>
                                <entry>Description</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row conref="../useful_info/common_node_red_nodes.dita#common_node_red_nodes/http_in">
                                <entry/>
                                <entry/>
                            </row>
                            <row conref="../useful_info/common_node_red_nodes.dita#common_node_red_nodes/function">
                                <entry/>
                                <entry/>
                            </row>
                            <row
                                conref="../useful_info/common_node_red_nodes.dita#common_node_red_nodes/mongodb_out">
                                <entry/>
                                <entry/>
                            </row>
                            <row
                                conref="../useful_info/common_node_red_nodes.dita#common_node_red_nodes/http_response">
                                <entry/>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <note
                    conref="add_data_to_your_database_with_post.dita#add_data_to_your_database_with_post/p_link_common_nodes"
                    id="note_lhr_b2q_tbc"/>
            </p>
        </context>
        <steps>
            <step>
                <cmd><text
                        conref="add_data_to_your_database_with_post.dita#add_data_to_your_database_with_post/text_step_drag_drop"
                /><image placement="break" href="../media/put/step1.png" width="500"
                        id="image_svw_shy_rbc">
                        <alt>Screenshot</alt>
                    </image></cmd>
            </step>
            <step>
                <cmd><text
                        conref="add_data_to_your_database_with_post.dita#add_data_to_your_database_with_post/text_step_connect_nodes"
                /><image placement="break" href="../media/put/step2.png" width="500"
                        id="image_opg_13y_rbc">
                        <alt>Screenshot</alt>
                    </image></cmd>
            </step>
            <step>
                <cmd><u>http in</u></cmd>
                <info>
                    <p>Double-click on the node to open its properties. Set the method to
                        <b>PUT</b>, name the endpoint for your URL, and then click <b>Done</b>.</p>
                    <image placement="break" href="../media/put/step3.png" width="500"
                        id="image_ihk_g5q_tbc">
                        <alt>Screenshot</alt>
                    </image>
                </info>
            </step>
            <step>
                <cmd><u>function</u></cmd>
                <info id="common_part_update_delete_function">
                    <p>To update an object, let's identify it by the object ID that MongoDB
                        generates automatically for its records. To do this, open the <b>Setup</b>
                        tab in the function's properties, add a module, and set it to
                            <i>objectid</i>. </p>
                    <image placement="break" href="../media/put/step4.1.png" width="500"
                        id="image_w4w_z5q_tbc">
                        <alt>Screenshot</alt>
                    </image>
                    <p>Return to the <b>On Message</b> tab and enter a descriptive name for your
                        function. </p>
                </info>
                <info>
                    <p>Now, let's update the function's body to meet our needs.</p>
                    <p>First, we will specify the <i>id</i> of the entry to be updated in the
                            <i>msg.query</i> object using the <i>_id</i> property received in the
                        body of the HTTP request. Then, we will delete the <i>_id</i> from the
                            <i>msg.payload</i> object since MongoDB doesn't allow id modification.
                        Finally, we'll use the MongoDB <i>$set</i> operator to specify the fields to
                        update and their new values.</p>
                    <note id="note_mongodb_docs_link">To learn more about MongoDB operators, refer
                        to the <xref href="https://www.mongodb.com/docs/v3.6/reference/operator/"
                            format="html" scope="external">MongoDB documentation</xref>.</note>
                    <p>Copy the following code at the beginning of the function's body: </p>
                    <codeblock id="codeblock_in5_yvp_tbc" outputclass="language-javascript">msg.query = {
  _id: objectid(msg.payload._id),
};

delete msg.payload._id;

msg.payload = {
  $set: msg.payload,
};</codeblock>
                    <p>Your function should now appear like this:</p>
                    <image placement="break" href="../media/put/step4.2.png" width="500"
                        id="image_ydk_5vq_tbc">
                        <alt>Screenshot</alt>
                    </image>
                </info>
            </step>
            <step>
                <cmd><u>mongodb out</u></cmd>
                <info>
                    <p>Specify the collection name in MongoDB, set the operation to <b>update</b>,
                        and then click <b>Done</b>.</p>
                    <image placement="break" href="../media/put/step5.png" width="500"
                        id="image_xj3_1wq_tbc">
                        <alt>Screenshot</alt>
                    </image>
                </info>
            </step>
            <step>
                <cmd><u>http response</u></cmd>
                <info>
                    <p> Leave the node without any changes.</p>
                </info>
            </step>
            <step>
                <cmd>Deploy the service.</cmd>
            </step>
        </steps>
        <result id="result_lbj_gq1_qbc">
            <p>The API is now ready to update existing entries in the database using the PUT
                method.</p>
            <p
                conref="add_data_to_your_database_with_post.dita#add_data_to_your_database_with_post/p_link_postman"/>
        </result>
    </taskbody>
</task>
